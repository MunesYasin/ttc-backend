# Use the official Node.js image (already includes build tools)
FROM node:18-slim

# Set working directory
WORKDIR /app

# Set memory limit for Node.js
ENV NODE_OPTIONS="--max-old-space-size=512"
ENV NPM_CONFIG_LOGLEVEL=error

# Copy package files
COPY package*.json ./
COPY .npmrc ./

# Install dependencies in production mode to reduce memory usage
# Skip optional dependencies and peer dependencies
RUN npm ci --omit=dev --omit=optional --omit=peer --maxsockets=1

# Copy prisma schema and generate client
COPY prisma ./prisma/
RUN npx prisma generate

# Install only essential dev dependencies for build
RUN npm install --save-dev @nestjs/cli typescript @swc/core @swc/cli --maxsockets=1

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Clean up dev dependencies to save space
RUN npm prune --production

# Create non-root user
RUN groupadd -g 1001 nodejs && \
    useradd -r -u 1001 -g nodejs nestjs

# Change ownership
RUN chown -R nestjs:nodejs /app

USER nestjs

EXPOSE 3000

# Start the application
CMD ["node", "dist/main"]
